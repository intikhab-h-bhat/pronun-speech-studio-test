@* @{
    ViewData["Title"] = "Pronunciation Assessment";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>
    <div class="container my-4">
        <h1>@ViewData["Title"]</h1>

        <!-- Language Selection -->
        <div class="mb-3">
            <label for="languageSelect" class="form-label">Choose a Pronunciation Assessment Language</label>
            <select id="languageSelect" class="form-select">
                <option value="en-US">English (United States)</option>
                <option value="en-GB">English (United Kingdom)</option>
                <option value="es-ES">Spanish (Spain)</option>
                <!-- Add more languages as needed -->
            </select>
        </div>

        <!-- Script Input -->
        <div class="mb-3">
            <label for="scriptInput" class="form-label">Provide a Script</label>
            <textarea id="scriptInput" class="form-control" rows="4">Today was a beautiful day. We had a great time taking a long walk outside in the morning. The countryside was in full bloom, yet the air was crisp and cold. Towards the end of the day, clouds came in, forecasting much-needed rain.</textarea>
        </div>

        <!-- Audio Recording or Upload -->
        <div class="mb-3">
            <button id="recordAudio" class="btn btn-primary">Record Audio with a Microphone</button>
            <input type="file" id="uploadAudio" class="form-control mt-2" accept=".wav,.mp3">
        </div>

        <!-- Assessment Results -->
        <div id="resultSection" class="mt-4" style="display: none;">
            <h3>Assessment Result</h3>

            <!-- Transcription with Highlights -->
            <div id="transcription" class="p-3 border rounded bg-light"></div>

            <!-- Score Breakdown -->
            <div class="mt-3">
                <h4>Pronunciation Score: <span id="overallScore" class="text-success"></span></h4>
                <div>
                    <p>Accuracy: <span id="accuracyScore"></span></p>
                    <p>Fluency: <span id="fluencyScore"></span></p>
                    <p>Completeness: <span id="completenessScore"></span></p>
                    <p>Prosody: <span id="prosodyScore"></span></p>
                </div>
            </div>

            <!-- Error Categories -->
            <div class="mt-3">
                <h4>Errors</h4>
                <ul>
                    <li>Mispronunciations: <span id="mispronunciations"></span></li>
                    <li>Omissions: <span id="omissions"></span></li>
                    <li>Insertions: <span id="insertions"></span></li>
                    <li>Unexpected Breaks: <span id="unexpectedBreaks"></span></li>
                </ul>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Simulate assessment for demonstration purposes
            $("#recordAudio, #uploadAudio").click(function () {
                // Simulate AJAX request to backend
                setTimeout(() => {
                    $("#resultSection").show();
                    $("#transcription").html(`
                        Today was a <span class="text-danger">beautful</span> day. We had a great time taking a long walk <span class="text-warning">ouside</span> in the morning. 
                        The countryside was in full bloom, yet the air was crisp and cold. Towards the end of the day, clouds came in, 
                        forecasting much needed rain.
                    `);
                    $("#overallScore").text("86");
                    $("#accuracyScore").text("91 / 100");
                    $("#fluencyScore").text("86 / 100");
                    $("#completenessScore").text("91 / 100");
                    $("#prosodyScore").text("81 / 100");
                    $("#mispronunciations").text("3");
                    $("#omissions").text("1");
                    $("#insertions").text("0");
                    $("#unexpectedBreaks").text("3");
                }, 1000); // Simulated delay
            });
        });
    </script>
</body>
</html>
 *@





@{
    ViewData["Title"] = "Pronunciation Assessment";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
</head>
<body>
    <div class="container">
        <h1>@ViewData["Title"]</h1>

        <div class="form-group">
            <button id="startAssessment" class="btn btn-primary">Start Reading</button>
          @*   <button id="stopAssessment" class="btn btn-danger" style="display:none;">Stop Pronunciation Assessment</button> *@
        </div>

        <div id="resultSection" class="mt-3" style="display:none;">
            <h3>Assessment Result:</h3>
            <div id="resultMessage"></div>
        </div>

    </div>

    <script>
        var isAssessmentRunning = false;

        $(document).ready(function () {
            $("#startAssessment").click(function () {
                // Disable the start button and show the stop button
                $(this).prop("disabled", true);
                $("#stopAssessment").show();
                $("#resultSection").hide(); // Hide result section initially

                // Start the assessment via AJAX
                $.ajax({
                    url: '@Url.Action("AssessPronunciation", "Pronunciation")',
                    type: 'POST',
                    success: function (response) {
                        // Show the result message
                        $("#resultMessage").text(response.result);
                        $("#resultSection").show(); // Show the result section
                        $("#startAssessment").prop("disabled", false); // Re-enable the start button
                    },
                    error: function () {
                        alert("Error occurred while assessing pronunciation.");
                        $("#startAssessment").prop("disabled", false); // Re-enable the start button
                    }
                });

                isAssessmentRunning = true;
            });

            $("#stopAssessment").click(function () {
                if (isAssessmentRunning) {
                    // Call an AJAX endpoint to stop the pronunciation assessment (this would need to be implemented in your controller)
                    $.ajax({
                        url: '@Url.Action("StopPronunciationAssessment", "Pronunciation")',
                        type: 'POST',
                        success: function () {
                            // Show the result message
                            $("#resultMessage").text("Pronunciation assessment stopped.");
                            $("#resultSection").show(); // Show the result section
                            $("#stopAssessment").hide(); // Hide the stop button
                            $("#startAssessment").prop("disabled", false); // Re-enable the start button
                        },
                        error: function () {
                            alert("Error occurred while stopping the pronunciation assessment.");
                        }
                    });
                }
            });
        });
    </script>
</body>
</html>












        @* @{
    ViewBag.Title = "Real-Time Pronunciation Assessment";
}

<h2>Real-Time Pronunciation Assessment</h2>

<p>Click the button below to start recording your speech:</p>

<button id="startRecording">Start Recording</button>
<button id="stopRecording" disabled>Stop Recording</button>

<p id="status">Status: Idle</p>

<div id="results">
    <h3>Results</h3>
    <ul id="resultsList"></ul>
</div>

<script>
    let mediaRecorder;
    let audioChunks = [];

    const startRecordingButton = document.getElementById("startRecording");
    const stopRecordingButton = document.getElementById("stopRecording");
    const status = document.getElementById("status");
    const resultsList = document.getElementById("resultsList");

    startRecordingButton.addEventListener("click", async () => {
        try {
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            mediaRecorder = new MediaRecorder(stream);

            mediaRecorder.ondataavailable = (event) => {
                audioChunks.push(event.data);
            };

            mediaRecorder.onstop = async () => {
                const audioBlob = new Blob(audioChunks, { type: "audio/wav" });
                audioChunks = [];

                // Send the audio blob to the backend
                const formData = new FormData();
                formData.append("audioFile", audioBlob, "audio.wav");

                const response = await fetch("/Pronunciation/AssessPronunciation", {
                    method: "POST",
                    body: formData,
                });

                const result = await response.json();
                displayResults(result);
            };

            mediaRecorder.start();
            status.innerText = "Status: Recording...";
            startRecordingButton.disabled = true;
            stopRecordingButton.disabled = false;
        } catch (error) {
            console.error("Error accessing microphone:", error);
        }
    });

    stopRecordingButton.addEventListener("click", () => {
        mediaRecorder.stop();
        status.innerText = "Status: Stopped";
        startRecordingButton.disabled = false;
        stopRecordingButton.disabled = true;
    });

    function displayResults(result) {
        resultsList.innerHTML = ""; // Clear previous results
        resultsList.innerHTML += `<li><strong>Pronunciation Score:</strong> ${result.pronunciationScore}</li>`;
        resultsList.innerHTML += `<li><strong>Accuracy Score:</strong> ${result.accuracyScore}</li>`;
        resultsList.innerHTML += `<li><strong>Completeness Score:</strong> ${result.completenessScore}</li>`;
        resultsList.innerHTML += `<li><strong>Fluency Score:</strong> ${result.fluencyScore}</li>`;
        resultsList.innerHTML += `<li><strong>Prosody Score:</strong> ${result.prosodyScore}</li>`;
        resultsList.innerHTML += `<li><strong>Words:</strong></li>`;
        result.words.forEach((word, index) => {
            resultsList.innerHTML += `<li>${index + 1}. ${word.wordText} (Accuracy: ${word.accuracyScore}, Error: ${word.errorType})</li>`;
        });
    }
</script>
 *@